/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './toutiao';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/navigation/nav-controller';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from 'ionic-angular/components/toolbar/toolbar';
import * as import12 from 'ionic-angular/components/navbar/navbar';
import * as import13 from 'ionic-angular/components/toolbar/toolbar-title';
import * as import14 from 'ionic-angular/components/content/content';
import * as import15 from 'ionic-angular/config/config';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from 'ionic-angular/navigation/view-controller';
import * as import18 from '../../node_modules/ionic-angular/components/navbar/navbar.ngfactory';
import * as import19 from 'ionic-angular/components/app/app';
import * as import20 from '../../node_modules/ionic-angular/components/toolbar/toolbar-title.ngfactory';
import * as import21 from '../../node_modules/ionic-angular/components/content/content.ngfactory';
import * as import22 from 'ionic-angular/util/keyboard';
import * as import23 from '@angular/core/src/zone/ng_zone';
import * as import24 from 'ionic-angular/components/tabs/tabs';
var renderType_toutiaoPage_Host = null;
var _View_toutiaoPage_Host0 = (function (_super) {
    __extends(_View_toutiaoPage_Host0, _super);
    function _View_toutiaoPage_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_toutiaoPage_Host0, renderType_toutiaoPage_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_toutiaoPage_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('page-toutiao', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_toutiaoPage0(this.viewUtils, this.injector(0), this._appEl_0);
        this._toutiaoPage_0_4 = new import3.toutiaoPage(this.parentInjector.get(import8.NavController));
        this._appEl_0.initComponent(this._toutiaoPage_0_4, [], compView_0);
        compView_0.create(this._toutiaoPage_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_toutiaoPage_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.toutiaoPage) && (0 === requestNodeIndex))) {
            return this._toutiaoPage_0_4;
        }
        return notFoundResult;
    };
    return _View_toutiaoPage_Host0;
}(import1.AppView));
function viewFactory_toutiaoPage_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_toutiaoPage_Host === null)) {
        (renderType_toutiaoPage_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_toutiaoPage_Host0(viewUtils, parentInjector, declarationEl);
}
export var toutiaoPageNgFactory = new import10.ComponentFactory('page-toutiao', viewFactory_toutiaoPage_Host0, import3.toutiaoPage);
var styles_toutiaoPage = [];
var renderType_toutiaoPage = null;
var _View_toutiaoPage0 = (function (_super) {
    __extends(_View_toutiaoPage0, _super);
    function _View_toutiaoPage0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_toutiaoPage0, renderType_toutiaoPage, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_toutiaoPage0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'ion-header', null);
        this._Header_0_3 = new import11.Header(this.parentInjector.get(import15.Config), new import16.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import17.ViewController, null));
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'ion-navbar', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'toolbar');
        this.renderer.setElementAttribute(this._el_2, 'color', 'secondary');
        this._appEl_2 = new import2.AppElement(2, 0, this, this._el_2);
        var compView_2 = import18.viewFactory_Navbar0(this.viewUtils, this.injector(2), this._appEl_2);
        this._Navbar_2_4 = new import12.Navbar(this.parentInjector.get(import19.App), this.parentInjector.get(import17.ViewController, null), this.parentInjector.get(import8.NavController, null), this.parentInjector.get(import15.Config), new import16.ElementRef(this._el_2), this.renderer);
        this._appEl_2.initComponent(this._Navbar_2_4, [], compView_2);
        this._text_3 = this.renderer.createText(null, '\n        ', null);
        this._el_4 = this.renderer.createElement(null, 'ion-title', null);
        this._appEl_4 = new import2.AppElement(4, 2, this, this._el_4);
        var compView_4 = import20.viewFactory_ToolbarTitle0(this.viewUtils, this.injector(4), this._appEl_4);
        this._ToolbarTitle_4_4 = new import13.ToolbarTitle(this.parentInjector.get(import15.Config), new import16.ElementRef(this._el_4), this.renderer, this.parentInjector.get(import11.Toolbar, null), this._Navbar_2_4);
        this._appEl_4.initComponent(this._ToolbarTitle_4_4, [], compView_4);
        this._text_5 = this.renderer.createText(null, '\n            养生头条\n        ', null);
        compView_4.create(this._ToolbarTitle_4_4, [[].concat([this._text_5])], null);
        this._text_6 = this.renderer.createText(null, '\n    ', null);
        compView_2.create(this._Navbar_2_4, [
            [],
            [],
            [],
            [].concat([
                this._text_3,
                this._el_4,
                this._text_6
            ])
        ], null);
        this._text_7 = this.renderer.createText(this._el_0, '\n', null);
        this._text_8 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_9 = this.renderer.createElement(parentRenderNode, 'ion-content', null);
        this._appEl_9 = new import2.AppElement(9, null, this, this._el_9);
        var compView_9 = import21.viewFactory_Content0(this.viewUtils, this.injector(9), this._appEl_9);
        this._Content_9_4 = new import14.Content(this.parentInjector.get(import15.Config), new import16.ElementRef(this._el_9), this.renderer, this.parentInjector.get(import19.App), this.parentInjector.get(import22.Keyboard), this.parentInjector.get(import23.NgZone), this.parentInjector.get(import17.ViewController, null), this.parentInjector.get(import24.Tabs, null));
        this._appEl_9.initComponent(this._Content_9_4, [], compView_9);
        this._text_10 = this.renderer.createText(null, '\n\n    ', null);
        this._el_11 = this.renderer.createElement(null, 'section', null);
        this.renderer.setElementAttribute(this._el_11, 'id', 'toutiao_wrap');
        this._text_12 = this.renderer.createText(this._el_11, '\n        ', null);
        this._el_13 = this.renderer.createElement(this._el_11, 'p', null);
        this.renderer.setElementAttribute(this._el_13, 'class', 'toutiao_title');
        this._text_14 = this.renderer.createText(this._el_13, '牙齿为什么会发黄?美白牙齿多吃7种食物。', null);
        this._text_15 = this.renderer.createText(this._el_11, '\n        ', null);
        this._el_16 = this.renderer.createElement(this._el_11, 'p', null);
        this._text_17 = this.renderer.createText(this._el_16, '2016-10-27', null);
        this._text_18 = this.renderer.createText(this._el_11, '\n        ', null);
        this._el_19 = this.renderer.createElement(this._el_11, 'img', null);
        this.renderer.setElementAttribute(this._el_19, 'class', 'toutiao_ban');
        this.renderer.setElementAttribute(this._el_19, 'src', 'assets/img2/toutiao1.jpeg');
        this._text_20 = this.renderer.createText(this._el_11, '\n\n        ', null);
        this._el_21 = this.renderer.createElement(this._el_11, 'div', null);
        this.renderer.setElementAttribute(this._el_21, 'class', 'toutiao_cont');
        this._text_22 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_23 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_24 = this.renderer.createText(this._el_23, ' 为什么明星们的牙齿都是白白亮亮的，我们的牙齿却会黑黑黄黄的呢？那是因为生活中的不少习惯很有可能导致你失去展开灿烂笑容的勇气，下面我们就来一起看看毁坏我们牙齿的那些元凶们！', null);
        this._text_25 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_26 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_27 = this.renderer.createText(this._el_26, '毁坏我们牙齿的那些元凶们', null);
        this._text_28 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_29 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_30 = this.renderer.createText(this._el_29, '1、 吃太多沙拉', null);
        this._text_31 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_32 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_33 = this.renderer.createText(this._el_32, ' 不是叫大家都别吃沙拉的意思～因为沙拉含有钙与镁 Calcium and Magnesium，对人体是有益的，只是会在牙齿上产生非常多的牙垢。牙垢上含有对牙齿及牙龈有害的细菌，沙拉中过多的镁与钙也会导致齿菌斑 Plaque—细菌的滋生处。', null);
        this._text_34 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_35 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_36 = this.renderer.createText(this._el_35, '还是可以吃沙拉啦，只是少吃点就好啰！', null);
        this._text_37 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_38 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_39 = this.renderer.createText(this._el_38, '2、使用过于刺激的牙膏', null);
        this._text_40 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_41 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_42 = this.renderer.createText(this._el_41, ' 市面上很多标榜超强效美白等等的强效牙膏，但其实有些成分过于刺激、涩口，反而会造成反效果，腐蚀牙齿。有些美白强效牙膏不只会带走咖啡的污渍，也会磨损你的牙齿和牙龈。', null);
        this._text_43 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_44 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_45 = this.renderer.createText(this._el_44, '3、酸性饮食', null);
        this._text_46 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_47 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_48 = this.renderer.createText(this._el_47, ' 对牙医来说，他们可以很轻易的移除牙齿上咖啡的污渍，但因为酸而受损的珐瑯质就没那么好恢復了。', null);
        this._text_49 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_50 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_51 = this.renderer.createText(this._el_50, ' 珐瑯质是保护牙齿的薄层，非常容易受到酸性食物的腐蚀。酸性饮食会使唾液中的酸硷值降低，因此就算你已经将酸性食物吞下肚，酸性还是会继续破坏你的牙齿！', null);
        this._text_52 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_53 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_54 = this.renderer.createText(this._el_53, '4、草率使用美白贴片', null);
        this._text_55 = this.renderer.createText(this._el_21, '\n            ', null);
        this._el_56 = this.renderer.createElement(this._el_21, 'p', null);
        this._text_57 = this.renderer.createText(this._el_56, ' 一口洁白牙齿的确非常吸引人，但是美白贴片除了效果因人而异之外，可能还有一些风险喔！专家表示，如果只将美白贴片使用在有污渍的地方，是没有问题的；但是人们还是常不小心将贴片接触到牙龈。任何能够将污渍从牙齿表面去除的东西，都有能力伤害牙龈！', null);
        this._text_58 = this.renderer.createText(this._el_21, '\n        ', null);
        this._text_59 = this.renderer.createText(this._el_11, '\n\n    ', null);
        this._text_60 = this.renderer.createText(null, '\n\n', null);
        compView_9.create(this._Content_9_4, [
            [],
            [].concat([
                this._text_10,
                this._el_11,
                this._text_60
            ]),
            []
        ], null);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this._expr_3 = import7.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._text_6,
            this._text_7,
            this._text_8,
            this._el_9,
            this._text_10,
            this._el_11,
            this._text_12,
            this._el_13,
            this._text_14,
            this._text_15,
            this._el_16,
            this._text_17,
            this._text_18,
            this._el_19,
            this._text_20,
            this._el_21,
            this._text_22,
            this._el_23,
            this._text_24,
            this._text_25,
            this._el_26,
            this._text_27,
            this._text_28,
            this._el_29,
            this._text_30,
            this._text_31,
            this._el_32,
            this._text_33,
            this._text_34,
            this._el_35,
            this._text_36,
            this._text_37,
            this._el_38,
            this._text_39,
            this._text_40,
            this._el_41,
            this._text_42,
            this._text_43,
            this._el_44,
            this._text_45,
            this._text_46,
            this._el_47,
            this._text_48,
            this._text_49,
            this._el_50,
            this._text_51,
            this._text_52,
            this._el_53,
            this._text_54,
            this._text_55,
            this._el_56,
            this._text_57,
            this._text_58,
            this._text_59,
            this._text_60
        ], [], []);
        return null;
    };
    _View_toutiaoPage0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import13.ToolbarTitle) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 5)))) {
            return this._ToolbarTitle_4_4;
        }
        if (((token === import12.Navbar) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 6)))) {
            return this._Navbar_2_4;
        }
        if (((token === import11.Header) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 7)))) {
            return this._Header_0_3;
        }
        if (((token === import14.Content) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 60)))) {
            return this._Content_9_4;
        }
        return notFoundResult;
    };
    _View_toutiaoPage0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = 'secondary';
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._Navbar_2_4.color = currVal_0;
            this._expr_0 = currVal_0;
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._Content_9_4.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = this._Navbar_2_4._hidden;
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_2, 'hidden', currVal_1);
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this._Navbar_2_4._sbPadding;
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementClass(this._el_2, 'statusbar-padding', currVal_2);
            this._expr_2 = currVal_2;
        }
        var currVal_3 = this._Content_9_4._sbPadding;
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementClass(this._el_9, 'statusbar-padding', currVal_3);
            this._expr_3 = currVal_3;
        }
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Navbar_2_4.ngAfterViewInit();
            }
        }
    };
    _View_toutiaoPage0.prototype.destroyInternal = function () {
        this._Content_9_4.ngOnDestroy();
    };
    return _View_toutiaoPage0;
}(import1.AppView));
export function viewFactory_toutiaoPage0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_toutiaoPage === null)) {
        (renderType_toutiaoPage = viewUtils.createRenderComponentType('/Users/apple/Desktop/github/cfdk/.tmp/pages/toutiao/toutiao.html', 0, import9.ViewEncapsulation.None, styles_toutiaoPage, {}));
    }
    return new _View_toutiaoPage0(viewUtils, parentInjector, declarationEl);
}
